[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 4d29575..083b80f 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,23 +1,56 @@[m
[31m-# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.[m
[32m+[m[32m# Node modules[m
[32m+[m[32mnode_modules/[m
 [m
[31m-# dependencies[m
[31m-/node_modules[m
[31m-/.pnp[m
[31m-.pnp.js[m
[32m+[m[32m# Build output[m
[32m+[m[32mbuild/[m
[32m+[m[32mdist/[m
[32m+[m[32m# Logs[m
[32m+[m[32m*.log[m
 [m
[31m-# testing[m
[31m-/coverage[m
[31m-[m
[31m-# production[m
[31m-/build[m
[31m-[m
[31m-# misc[m
[31m-.DS_Store[m
[32m+[m[32m# Environment variables[m
[32m+[m[32m.env[m
 .env.local[m
 .env.development.local[m
 .env.test.local[m
 .env.production.local[m
 [m
[32m+[m[32m# IDE specific files[m
[32m+[m[32m.vscode/[m
[32m+[m[32m.idea/[m
[32m+[m
[32m+[m[32m# Operating system generated files[m
[32m+[m[32m.DS_Store[m
[32m+[m[32mThumbs.db[m
[32m+[m
[32m+[m[32m# Temporary files[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.temp[m
[32m+[m
[32m+[m[32m# Coverage directory used by tools like istanbul[m
[32m+[m[32mcoverage/[m
[32m+[m
[32m+[m[32m# Miscellaneous[m
 npm-debug.log*[m
 yarn-debug.log*[m
 yarn-error.log*[m
[32m+[m
[32m+[m[32m# React Native[m
[32m+[m[32m.expo/[m
[32m+[m[32m.expo-shared/[m
[32m+[m
[32m+[m[32m# Ignore any other files or directories you want to exclude[m
[32m+[m[32m# For example, if you have a folder for local development:[m
[32m+[m[32mlocal_dev/[m
[32m+[m
[32m+[m[32m# Ignore any build artifacts[m
[32m+[m[32m*.tgz[m
[32m+[m[32m*.zip[m
[32m+[m[32m*.tar.gz[m
[32m+[m
[32m+[m[32m# Ignore any other files you want to exclude[m
[32m+[m[32m*.bak[m
[32m+[m[32m*.swp[m
[32m+[m[32m.gitignore[m
[32m+[m[32mpackage-lock.json[m
[32m+[m[32mpackage-lock.json[m
[32m+[m[32mpackage-lock.json[m
[1mdiff --git a/backend/25.0.1 b/backend/25.0.1[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/backend/app.py b/backend/app.py[m
[1mnew file mode 100644[m
[1mindex 0000000..9f1ecb6[m
[1m--- /dev/null[m
[1m+++ b/backend/app.py[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mfrom flask import Flask, request, jsonify[m[41m[m
[32m+[m[32mfrom flask_cors import CORS[m[41m[m
[32m+[m[41m[m
[32m+[m[32mapp = Flask(__name__)[m[41m[m
[32m+[m[32mCORS(app)  # Enable CORS for all routes[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@app.route('/api/chat', methods=['POST'])[m[41m[m
[32m+[m[32mdef chat():[m[41m[m
[32m+[m[32m    user_input = request.json.get('message')[m[41m[m
[32m+[m[32m    # Here you would integrate your AI model to generate a response[m[41m[m
[32m+[m[32m    response = f"You said: {user_input}"  # Placeholder response[m[41m[m
[32m+[m[32m    return jsonify({'response': response})[m[41m[m
[32m+[m[41m[m
[32m+[m[32mif __name__ == '__main__':[m[41m[m
[32m+[m[32m    app.run(debug=True)[m
\ No newline at end of file[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 48c44ea..04d15a8 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -14,6 +14,7 @@[m
         "@testing-library/user-event": "^13.5.0",[m
         "react": "^19.0.0",[m
         "react-dom": "^19.0.0",[m
[32m+[m[32m        "react-router-dom": "^7.3.0",[m
         "react-scripts": "5.0.1",[m
         "web-vitals": "^2.1.4"[m
       }[m
[36m@@ -3651,6 +3652,12 @@[m
         "@types/node": "*"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/@types/cookie": {[m
[32m+[m[32m      "version": "0.6.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/@types/eslint": {[m
       "version": "8.56.12",[m
       "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-8.56.12.tgz",[m
[36m@@ -13923,6 +13930,55 @@[m
         "node": ">=0.10.0"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/react-router": {[m
[32m+[m[32m      "version": "7.3.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-router/-/react-router-7.3.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-466f2W7HIWaNXTKM5nHTqNxLrHTyXybm7R0eBlVSt0k/u55tTCDO194OIx/NrYD4TS5SXKTNekXfT37kMKUjgw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@types/cookie": "^0.6.0",[m
[32m+[m[32m        "cookie": "^1.0.1",[m
[32m+[m[32m        "set-cookie-parser": "^2.6.0",[m
[32m+[m[32m        "turbo-stream": "2.4.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=20.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": ">=18",[m
[32m+[m[32m        "react-dom": ">=18"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependenciesMeta": {[m
[32m+[m[32m        "react-dom": {[m
[32m+[m[32m          "optional": true[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/react-router-dom": {[m
[32m+[m[32m      "version": "7.3.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.3.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-z7Q5FTiHGgQfEurX/FBinkOXhWREJIAB2RiU24lvcBa82PxUpwqvs/PAXb9lJyPjTs2jrl6UkLvCZVGJPeNuuQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "react-router": "7.3.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=20.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": ">=18",[m
[32m+[m[32m        "react-dom": ">=18"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/react-router/node_modules/cookie": {[m
[32m+[m[32m      "version": "1.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=18"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/react-scripts": {[m
       "version": "5.0.1",[m
       "resolved": "https://registry.npmjs.org/react-scripts/-/react-scripts-5.0.1.tgz",[m
[36m@@ -14838,6 +14894,12 @@[m
         "node": ">= 0.8.0"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/set-cookie-parser": {[m
[32m+[m[32m      "version": "2.7.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/set-function-length": {[m
       "version": "1.2.2",[m
       "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",[m
[36m@@ -16216,6 +16278,12 @@[m
       "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",[m
       "license": "0BSD"[m
     },[m
[32m+[m[32m    "node_modules/turbo-stream": {[m
[32m+[m[32m      "version": "2.4.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/turbo-stream/-/turbo-stream-2.4.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-FHncC10WpBd2eOmGwpmQsWLDoK4cqsA/UT/GqNoaKOQnT8uzhtCbg3EoUDMvqpOSAI0S26mr0rkjzbOO6S3v1g==",[m
[32m+[m[32m      "license": "ISC"[m
[32m+[m[32m    },[m
     "node_modules/type-check": {[m
       "version": "0.4.0",[m
       "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 1848776..f845780 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -9,6 +9,7 @@[m
     "@testing-library/user-event": "^13.5.0",[m
     "react": "^19.0.0",[m
     "react-dom": "^19.0.0",[m
[32m+[m[32m    "react-router-dom": "^7.3.0",[m
     "react-scripts": "5.0.1",[m
     "web-vitals": "^2.1.4"[m
   },[m
[1mdiff --git a/public/index.html b/public/index.html[m
[1mindex aa069f2..db34dd6 100644[m
[1m--- a/public/index.html[m
[1m+++ b/public/index.html[m
[36m@@ -10,20 +10,8 @@[m
       content="Web site created using create-react-app"[m
     />[m
     <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />[m
[31m-    <!--[m
[31m-      manifest.json provides metadata used when your web app is installed on a[m
[31m-      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/[m
[31m-    -->[m
     <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />[m
[31m-    <!--[m
[31m-      Notice the use of %PUBLIC_URL% in the tags above.[m
[31m-      It will be replaced with the URL of the `public` folder during the build.[m
[31m-      Only files inside the `public` folder can be referenced from the HTML.[m
[31m-[m
[31m-      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will[m
[31m-      work correctly both with client-side routing and a non-root public URL.[m
[31m-      Learn how to configure a non-root public URL by running `npm run build`.[m
[31m-    -->[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/css2?family=Noto+Nastaliq+Urdu&display=swap" rel="stylesheet"> <!-- Added Google Fonts link -->[m
     <title>React App</title>[m
   </head>[m
   <body>[m
[36m@@ -40,4 +28,4 @@[m
       To create a production bundle, use `npm run build` or `yarn build`.[m
     -->[m
   </body>[m
[31m-</html>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/src/App.css b/src/App.css[m
[1mindex 74b5e05..943cd66 100644[m
[1m--- a/src/App.css[m
[1m+++ b/src/App.css[m
[36m@@ -1,18 +1,10 @@[m
[32m+[m[32m/* src/App.css */[m
 .App {[m
   text-align: center;[m
 }[m
[31m-[m
[31m-.App-logo {[m
[31m-  height: 40vmin;[m
[31m-  pointer-events: none;[m
[31m-}[m
[31m-[m
[31m-@media (prefers-reduced-motion: no-preference) {[m
[31m-  .App-logo {[m
[31m-    animation: App-logo-spin infinite 20s linear;[m
[31m-  }[m
[32m+[m[32m.urdu-text {[m
[32m+[m[32m  font-family: 'Noto Nastaliq Urdu', serif; /* Apply the Noto Nastaliq font */[m
 }[m
[31m-[m
 .App-header {[m
   background-color: #282c34;[m
   min-height: 100vh;[m
[36m@@ -24,15 +16,17 @@[m
   color: white;[m
 }[m
 [m
[31m-.App-link {[m
[31m-  color: #61dafb;[m
[32m+[m[32m.question-input {[m
[32m+[m[32m  width: 400px; /* Set a minimum width */[m
[32m+[m[32m  min-height: 50px; /* Set a minimum height */[m
[32m+[m[32m  padding: 10px; /* Add some padding */[m
[32m+[m[32m  font-size: 16px; /* Increase font size for the input to 16px */[m
[32m+[m[32m  margin: 20px 0; /* Add some margin for spacing */[m
[32m+[m[32m  resize: vertical; /* Allow vertical resizing */[m
 }[m
 [m
[31m-@keyframes App-logo-spin {[m
[31m-  from {[m
[31m-    transform: rotate(0deg);[m
[31m-  }[m
[31m-  to {[m
[31m-    transform: rotate(360deg);[m
[31m-  }[m
[32m+[m[32m.question-display {[m
[32m+[m[32m  font-size: 16px; /* Increase font size for displayed questions to 16px */[m
[32m+[m[32m  color: #ffffff; /* Keep the text color white for visibility */[m
[32m+[m[32m  margin: 5px 0; /* Add some margin for spacing between questions */[m
 }[m
[1mdiff --git a/src/App.js b/src/App.js[m
[1mindex 3784575..528458c 100644[m
[1m--- a/src/App.js[m
[1m+++ b/src/App.js[m
[36m@@ -1,25 +1,44 @@[m
[31m-import logo from './logo.svg';[m
[31m-import './App.css';[m
[32m+[m[32mimport React, { useState } from 'react';[m
[32m+[m[32mimport './App.css'; // Ensure your CSS is set up to use the Noto Nastaliq font[m
 [m
 function App() {[m
[32m+[m[32m  const [question, setQuestion] = useState('');[m
[32m+[m[32m  const [questions, setQuestions] = useState([]);[m
[32m+[m
[32m+[m[32m  const handleChange = (event) => {[m
[32m+[m[32m    setQuestion(event.target.value);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleSubmit = (event) => {[m
[32m+[m[32m    event.preventDefault();[m
[32m+[m[32m    if (question.trim()) {[m
[32m+[m[32m      setQuestions([...questions, question]);[m
[32m+[m[32m      setQuestion(''); // Clear the input after submission[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
   return ([m
     <div className="App">[m
       <header className="App-header">[m
[31m-        <img src={logo} className="App-logo" alt="logo" />[m
[31m-        <p>[m
[31m-          Edit <code>src/App.js</code> and save to reload.[m
[31m-        </p>[m
[31m-        <a[m
[31m-          className="App-link"[m
[31m-          href="https://reactjs.org"[m
[31m-          target="_blank"[m
[31m-          rel="noopener noreferrer"[m
[31m-        >[m
[31m-          Learn React[m
[31m-        </a>[m
[32m+[m[32m        <h1 className="urdu-text">Welcome to ShiaGuide</h1>[m
[32m+[m[32m        <p className="urdu-text">This is a platform for exploring Shia Islamic teachings and resources.</p>[m
[32m+[m[32m        <form onSubmit={handleSubmit}>[m
[32m+[m[32m          <textarea[m
[32m+[m[32m            className="question-input"[m
[32m+[m[32m            placeholder="Ask a question..."[m
[32m+[m[32m            value={question}[m
[32m+[m[32m            onChange={handleChange}[m
[32m+[m[32m          />[m
[32m+[m[32m          <button type="submit">Submit</button>[m
[32m+[m[32m        </form>[m
[32m+[m[32m        <div>[m
[32m+[m[32m          {questions.map((q, index) => ([m
[32m+[m[32m            <p key={index} className="question-display urdu-text">{q}</p> // Display submitted questions[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </div>[m
       </header>[m
     </div>[m
   );[m
 }[m
 [m
[31m-export default App;[m
[32m+[m[32mexport default App;[m
\ No newline at end of file[m
[1mdiff --git a/src/App.test.js b/src/App.test.js[m
[1mindex 1f03afe..49529d1 100644[m
[1m--- a/src/App.test.js[m
[1m+++ b/src/App.test.js[m
[36m@@ -1,8 +1,23 @@[m
[32m+[m[32mimport React from 'react';[m
 import { render, screen } from '@testing-library/react';[m
 import App from './App';[m
 [m
[31m-test('renders learn react link', () => {[m
[32m+[m[32mtest('renders welcome message and platform description', () => {[m
   render(<App />);[m
[31m-  const linkElement = screen.getByText(/learn react/i);[m
[31m-  expect(linkElement).toBeInTheDocument();[m
[31m-});[m
[32m+[m[41m  [m
[32m+[m[32m  // Check for the welcome message[m
[32m+[m[32m  const welcomeElement = screen.getByText(/welcome to shiaguide/i);[m
[32m+[m[32m  expect(welcomeElement).toBeInTheDocument();[m
[32m+[m[41m  [m
[32m+[m[32m  // Check for the platform description[m
[32m+[m[32m  const descriptionElement = screen.getByText(/this is a platform for exploring shia islamic teachings and resources/i);[m
[32m+[m[32m  expect(descriptionElement).toBeInTheDocument();[m
[32m+[m[41m  [m
[32m+[m[32m  // Check for the "hi" text[m
[32m+[m[32m  const hiElement = screen.getByText(/hi/i);[m
[32m+[m[32m  expect(hiElement).toBeInTheDocument();[m
[32m+[m[41m  [m
[32m+[m[32m  // Check for the "Submit" button[m
[32m+[m[32m  const submitButton = screen.getByRole('button', { name: /submit/i });[m
[32m+[m[32m  expect(submitButton).toBeInTheDocument();[m
[32m+[m[32m});[m
\ No newline at end of file[m
